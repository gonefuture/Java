package 加法变乘法;
import java.util.Scanner;
				/*
				 * 加法变乘法
				
				我们都知道：1+2+3+ ... + 49 = 1225
				现在要求你把其中两个不相邻的加号变成乘号，使得结果为2015
				
				比如：
				1+2+3+...+10*11+12+...+27*28+29+...+49 = 2015
				就是符合要求的答案。
				
				请你寻找另外一个可能的答案，并把位置靠前的那个乘号左边的数字提交（对于示例，就是提交10）。
				
				注意：需要你提交的是一个整数，不要填写任何多余的内容。
				 */

public class Main{
	public static void main(String[] args){
		int i,j;
		
		for( i =1; i<50;i++ ){
			for( j =i+2; j<49; j++){
				//注意题干，所有信息都是有用的。
				int t1=1225-i-(i+1)-j-(j+1);    
		        int t2=2015-i*(i+1)-j*(j+1);  
		        if(t1==t2) 
		        	System.out.println(i);;
			}	
		}
	}
}
			
			/*
			点评：
			比较容易。
			两重循环，逐一实验改为乘号的位置就可以了。
			可以使用的技巧是：不必逐一算式，加法、乘法地验证答案。
			设在第i项后改，则：
			... + i + (i+1) + ...
			改为：+ i * (i+1) + ...
			应该比原来增大了： i*i-i-1 这么多。可以快速算出整个算式的结果。 * 
			 * 				
			*/